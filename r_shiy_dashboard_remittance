##############################################################################################################################################
#THE SCRIPT BELOW IS SAVED AS .TXT, TO DEPLOY SHINY APP from app.R FILE IN SAME DIRECTORY AS setwd() BELOW#
#install.packages("rsconnect", repos="http://cran.us.r-project.org", dependencies = TRUE)
library(rsconnect)

#install.packages("digest", repos="http://cran.us.r-project.org")
library(digest)


setwd("C:\\Users\\P1318124\\Desktop\\BA Projects\\R ShinyDashboard\\use_deploy_shiny")

rsconnect::setAccountInfo(name='akbarsingtel',
			  token='0A4D25761E46F06DA1AD7CFE67C9FD7A',
			  secret='********') #GET FROM SHINYAPPS.IO UNDER TOKENS TAB
rsconnect::deployApp()

###############################################################################################################################################
#THE SCRIPT BELOW IS SAVED AS app.R, IN SAME DIRECTORY AS setwd() DEFINED ABOVE#
#install.packages("rsconnect", repos="http://cran.us.r-project.org")
library(rsconnect)
library(shiny)
library(shinydashboard)
library(dplyr)
#library(xlsx)
library(readxl)
library(lubridate)
library(reshape2)

data <- read_excel("daily_remittance.xlsx",2)

log_file <- "C:\\Users\\P1318124\\Desktop\\BA Projects\\R ShinyDashboard\\use_deploy_shiny\\daily_remittance.xlsx"

#explore data
#sapply(data, class)
#sapply(data, anyNA)



sum_tv <- sum(data$NETT_SPENDS)
sum_tc <- sum(data$NETT_TRANSACTIONS)

sum_tv_mtd <- data %>%
filter(month(TXN_DATE) == month(Sys.Date() - 1)) %>%
filter(year(TXN_DATE) == year(Sys.Date() - 1)) %>%
summarise(sum_tv_mtd = sum(NETT_SPENDS))

sum_tv_mtd <- paste("$",round(sum_tv_mtd ,2),sep="")


sum_tc_mtd <- data %>%
filter(month(TXN_DATE) == month(Sys.Date() - 1)) %>%
filter(year(TXN_DATE) == year(Sys.Date() - 1)) %>%
summarise(sum_tc_mtd = sum(NETT_TRANSACTIONS))

arpt_mtd <- data %>%
filter(month(TXN_DATE) == month(Sys.Date() - 1)) %>%
filter(year(TXN_DATE) == year(Sys.Date() - 1)) %>%
summarise(arpt_mtd = sum(NETT_SPENDS)/sum(NETT_TRANSACTIONS))

arpt_mtd <- paste("$",round(arpt_mtd ,2),sep="")

data_day <- data %>%
filter(ymd(TXN_DATE) >= Sys.Date()-32) %>%
group_by(ymd(TXN_DATE), CORRIDOR) %>%
summarise(NETT_SPENDS=sum(NETT_SPENDS,na.rm=TRUE), NETT_TRANSACTIONS = sum(NETT_TRANSACTIONS, na.rm =TRUE))

data_day_corridor_tv <- dcast(data_day,CORRIDOR ~ data_day$'ymd(TXN_DATE)', value.var = "NETT_SPENDS",fun.aggregate = sum)
data_day_corridor_tc <- dcast(data_day,CORRIDOR ~ data_day$'ymd(TXN_DATE)', value.var = "NETT_TRANSACTIONS",fun.aggregate = sum)

rownames(data_day_corridor_tv) <- data_day_corridor_tv$CORRIDOR
rownames(data_day_corridor_tc) <- data_day_corridor_tc$CORRIDOR

data_day_corridor_tv <- data_day_corridor_tv[,-1]
data_day_corridor_tc <- data_day_corridor_tc[,-1]

header <- dashboardHeader()
sidebar <- dashboardSidebar(disable = TRUE)
body <- dashboardBody()

body <- dashboardBody(
  
fluidRow(
    # Add a value box for maximum velocity
    
valueBox(
      
value = sum_tv_mtd,
      
subtitle = "Amount of Transactions MTD", 
      
icon = icon("dollar")
    )
,
valueBox(
value = sum_tc_mtd,
subtitle = "Number of Transactions MTD",
icon = icon("globe")),
valueBox(
value = arpt_mtd,
subtitle = "Average Ticket Size MTD",
icon = icon("shopping-cart"))  

),
fluidRow( #Add barchart
box(plotOutput("barchart_tv"), title = "Daily TV by Corridor")
,
box(plotOutput("barchart_tc"), title = "Daily TC by Corridor")
)


)

header <- dashboardHeader(
title = "Remittance Performance Summary"
)


ui <- dashboardPage(header,sidebar,body)

server <- function(input, output, session) {

#data <- reactivePoll(1000, session, 
#checkFunc = function(){
#if(file.exists(log_file)){
#file.info(log_file)$mtime[1]}
#else{
#""}
#},
#valueFunc = function() {
#read_excel(log_file,1)
#}
#)

#output$dataTable <- renderTable({
#read_excel(log_file,2)

#})


output$barchart_tv <- renderPlot({
#barplot(data_day$NETT_SPENDS, names.arg = data_day$'ymd(TXN_DATE)', axes = TRUE, col = "purple")
barplot(as.matrix(data_day_corridor_tv), col = terrain.colors(length(unique(data_day$CORRIDOR))), legend = TRUE, args.legend = list(bty = "n", x = "top", ncol = 2), ylim = c(0,max(data_day$NETT_SPENDS,na.rm=TRUE)+1000000))
})
output$barchart_tc <- renderPlot({
#barplot(data_day$NETT_TRANSACTIONS, names.arg = data_day$'ymd(TXN_DATE)', axes = TRUE, col = "purple")
barplot(as.matrix(data_day_corridor_tc), col = terrain.colors(length(unique(data_day$CORRIDOR))), legend = TRUE, args.legend = list(bty = "n", x = "top", ncol = 2), ylim = c(0,max(data_day$NETT_TRANSACTIONS,na.rm=TRUE)+5000))
})
reactive_data <- reactiveFileReader(
intervalMillis = 100,
session = session,
filePath = "daily_remittance.xlsx",
readFunc = function(filePath){
read_excel(filePath,2)
}
)

}

shiny::shinyApp(ui, server)



